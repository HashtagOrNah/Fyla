[gd_resource type="VisualShader" load_steps=3 format=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
output_port_for_preview = 1
constant = Color( 0, 0, 0, 1 )

[sub_resource type="VisualShaderNodeColorOp" id=2]
output_port_for_preview = 0
operator = 1

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;




void vertex() {
// Output:0

}

void fragment() {
// Color:2
	vec3 n_out2p0 = vec3(0.000000, 0.000000, 0.000000);
	float n_out2p1 = 1.000000;

// ColorOp:3
	vec3 n_in3p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out3p0 = abs(n_out2p0 - n_in3p1);

// Output:0
	ALPHA = dot(n_out3p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
nodes/fragment/0/position = Vector2( 700, 20 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 140, 60 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 420, 60 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 1, 2, 0, 3, 0 )
